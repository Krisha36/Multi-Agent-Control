#include <tf/transform_listener.h>
#include <geometry_msgs/PoseStamped.h>
#include <nav_msgs/Odometry.h>
double pose(int flag);
ros::Publisher goal_0,goal_1,goal_2,goal_3;
int main(int argc, char** argv)
{
  
  ros::init(argc, argv, "set_goal_node");
  ros::NodeHandle nh_;
  std::string fixed_frame = "map";
  tf::Quaternion quat;
  quat.setRPY(0.0, 0.0, 0);
  geometry_msgs::PoseStamped pose_0,pose_1,pose_2,pose_3;
  goal_0 = nh_.advertise<geometry_msgs::PoseStamped> ("/tb3_0/move_base_simple/goal", 1);
  pose_0.header.frame_id = fixed_frame;
  pose_0.header.stamp = ros::Time::now();
  pose_0.pose.position.x = 1.0;
  pose_0.pose.position.y = 0.0;
  pose_0.pose.position.z = 0.0;
  tf::quaternionTFToMsg(quat, pose_0.pose.orientation);
  goal_1 = nh_.advertise<geometry_msgs::PoseStamped> ("/tb3_1/move_base_simple/goal", 1);
  pose_1.header.frame_id = fixed_frame;
  pose_1.header.stamp = ros::Time::now();
  pose_1.pose.position.x = 0.0;
  pose_1.pose.position.y = 1.0;
  pose_1.pose.position.z = 0.0;
  tf::quaternionTFToMsg(quat, pose_1.pose.orientation);
  goal_2 = nh_.advertise<geometry_msgs::PoseStamped> ("/tb3_2/move_base_simple/goal", 1);
  pose_2.header.frame_id = fixed_frame;
  pose_2.header.stamp = ros::Time::now();
  pose_2.pose.position.x = -1.0;
  pose_2.pose.position.y = 0.0;
  pose_2.pose.position.z = 0.0;
  tf::quaternionTFToMsg(quat, pose_2.pose.orientation);
  goal_3 = nh_.advertise<geometry_msgs::PoseStamped> ("/tb3_3/move_base_simple/goal", 1);
  pose_3.header.frame_id = fixed_frame;
  pose_3.header.stamp = ros::Time::now();
  pose_3.pose.position.x = -0.0;
  pose_3.pose.position.y = -1.0;
  pose_3.pose.position.z = 0.0;
  tf::quaternionTFToMsg(quat, pose_3.pose.orientation);
  ros::Rate loop_rate(10);
  int i = 0;
  while (i<=10){
    goal_0.publish(pose_0);
    goal_1.publish(pose_1);
    goal_2.publish(pose_2);
    goal_3.publish(pose_3);
    i=i+1;
    loop_rate.sleep();
    }
  return 0;
}
